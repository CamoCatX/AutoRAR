#!/bin/bash

LOG_FILE="script.log"

# Exit on any error
set -e

# Check if the script is run as root
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root."
    exit 1
fi


# Logging function
log() {
    local log_message="$1"
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $log_message" | tee -a "$LOG_FILE"
}

log "=== Security Script Started ==="

}

log "Updating the system..."
apt update -y
apt upgrade -y
apt autoremove -y

log "Installing essential security tools..."
apt install -y ufw fail2ban lynis

log "Configuring Uncomplicated Firewall (UFW)..."
ufw default deny incoming
ufw default allow outgoing
ufw allow 22/tcp     # SSH
ufw allow 80/tcp     # HTTP
ufw allow 443/tcp    # HTTPS
ufw allow 53         # DNS
ufw allow 123/udp    # NTP
ufw enable

log "Configuring Fail2Ban..."
systemctl enable fail2ban
systemctl start fail2ban

log "Securing SSH configuration..."
# Disallow password-based authentication
sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config

# Disable root login
sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config

# Set SSH Protocol to 2 only
sed -i 's/#Protocol 2/Protocol 2/' /etc/ssh/sshd_config

# Allow only specific users to SSH
# Replace "allowed_user" with the actual username you want to allow
echo "AllowUsers allowed_user" >> /etc/ssh/sshd_config

# Disable SSH banner
sed -i 's/#Banner.*/Banner none/' /etc/ssh/sshd_config

# Restart SSH service to apply changes
systemctl restart ssh

log "Creating a new user with sudo privileges..."
read -p "Enter a new username: " sudo_user
adduser $new_user
usermod -aG sudo $new_user
chmod 700 /home/$new_user

log "Setting up automatic security updates..."
apt install -y unattended-upgrades
dpkg-reconfigure -plow unattended-upgrades

# Install Lynis
log "Installing Lynis..."
lynis --version || apt install -y lynis

# Run Lynis
log "Running Lynis..."
lynis audit system

# Address vulnerabilities identified by Lynis
log "Fixing vulnerabilities identified by Lynis..."
lynis fix --test-all

# Remove all .mp3 files (WARNING: Use with caution!)
read -p "Do you want to remove all .mp3 files from the system? (y/n): " remove_mp3_choice
if [ "$remove_mp3_choice" == "y" ]; then
    log "Removing all .mp3 files from the system..."
    find / -name "*.mp3" -type f -delete
    echo "All .mp3 files have been removed."
else
    log "No .mp3 files were removed."
fi

log "Checking IPv4 Forwarding..."
ipv4_forwarding=$(grep -E '^net\.ipv4\.ip_forward' /etc/sysctl.conf | awk '{print $3}')
if [ "$ipv4_forwarding" == "1" ]; then
    log "IPv4 Forwarding is enabled. Disabling..."
    sed -i 's/^net\.ipv4\.ip_forward=1/net\.ipv4\.ip_forward=0/' /etc/sysctl.conf
    sysctl -p
    log "IPv4 Forwarding has been disabled."
else
    log "IPv4 Forwarding is already disabled."
fi

# 21) SSHD Service is installed and started
log "Checking SSHD Service..."
if ! systemctl is-active --quiet ssh; then
    log "SSHD Service is not running. Installing and starting..."
    apt-get install -y openssh-server
    systemctl start ssh
    log "SSHD Service has been installed and started."
else
    log "SSHD Service is already running."
fi

# 22) Install updates from important security updates
log "Installing updates from important security updates..."
apt-get install -y update
software_sources="/etc/apt/sources.list"
if grep -q "^#" "$software_sources"; then
    log "Updating software sources..."
    sed -i 's/^#//' "$software_sources"
    log "Software sources updated."
fi
log "Configuring Software Updater settings..."
echo "Please manually configure the Software Updater settings as described in the instructions."
echo "Once configured, run 'sudo apt-get update && sudo apt-get upgrade' to install updates."

# 23) Insecure permissions on shadow file fixed
log "Checking permissions on the shadow file..."
shadow_permissions=$(stat -c "%a" /etc/shadow)
if [ "$shadow_permissions" != "640" ]; then
    log "Fixing insecure permissions on the shadow file..."
    chmod 640 /etc/shadow
    log "Permissions on the shadow file have been set to 640."
else
    log "Permissions on the shadow file are already secure."
fi

log "=== Security Script Completed ==="

# Reboot the system if changes were made
if [[ "$reboot_choice" == "y" ]]; then
    log "Rebooting the system..."
    reboot
fi
